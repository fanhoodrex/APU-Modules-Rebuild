#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX 1000

int amount;				//应收总额
int payment;			//已收总额

//房间结构体
typedef struct Room {
	char block[5];			//街区
	char gender[10];		//性别
	char room_type[20];		//房间类型
	int price;				//价格
	int meal;				//膳食价格
	int laundry;			//洗衣价格
	int num;				//房间数量
}Room;

Room room[MAX];

//客人结构体
typedef struct Person {
	int id;					//身份ID
	char name[20];			//姓名
	char gender[10];		//性别
	char block[5];			//街区
	char room_type[20];		//房间类型
	int price;				//房间价格
	int meal;				//膳食价格
	int laundry;			//洗衣价格
	int week;				//周数
	int due;				//应付金额
	int payment;			//付款金额
	char paytype[20];		//支付方式
}Person;

Person person[MAX];
int num_person;

//导入信息
void import_room() {
	FILE* fp;
	int i = 0;

	if ((fp = fopen("room.txt", "r")) == NULL)
	{
		printf("Failed to open the file！");
		exit(0);
	}

	while (!feof(fp))
	{
		fscanf(fp, "%s %s %s %d %d %d %d\n",
			room[i].block, room[i].gender, room[i].room_type, &room[i].price, &room[i].meal, &room[i].laundry, &room[i].num);
		i++;
	}

	if ((fp = fopen("data.txt", "r")) == NULL)
	{
		printf("Failed to open the file！");
		exit(0);
	}

	while (!feof(fp))
	{
		fscanf(fp, "%d %d\n", &amount, &payment);
	}
	fclose(fp);

	int flag = 1, c;
	num_person = 0;
	fp = fopen("person.txt", "r");		//打开只读文件
	if (fp == NULL)
	{
		flag = 0;
		printf("Failed to open the file！");			//没有相应文件直接退出系统
		exit(0);
	}
	else
	{
		while ((c = fgetc(fp)) != EOF)
		{
			if (c == '\n')			//每次读取到换行符，记录总数+1
				num_person++;
		}
	}
	fclose(fp);

	if (flag)
	{
		if (num_person)			//数据总数不为0
		{
			fp = fopen("person.txt", "r");
			i = 0;
			while (!feof(fp))
			{
				fscanf(fp, "%d %s %s %s %s %d %d %d %d %d %d %s\n",
					&person[i].id, person[i].name, person[i].gender, person[i].block, person[i].room_type, &person[i].price, &person[i].meal, &person[i].laundry, &person[i].week, &person[i].due, &person[i].payment, person[i].paytype);
				i++;
			}
		}
	}
	fclose(fp);
}

//保存信息
void save_room() {
	FILE* fp;
	int i;

	if ((fp = fopen("room.txt", "w")) == NULL)
	{
		printf("Failed to open the file！");
		exit(0);
	}

	for (i = 0; i < 4; i++)
	{
		fprintf(fp, "%s %s %s %d %d %d %d\n",
			room[i].block, room[i].gender, room[i].room_type, room[i].price, room[i].meal, room[i].laundry, room[i].num);
	}
	fclose(fp);

	if ((fp = fopen("data.txt", "w")) == NULL)
	{
		printf("Failed to open the file！");
		exit(0);
	}
	fprintf(fp, "%d %d\n", amount, payment);
	fclose(fp);

	if ((fp = fopen("person.txt", "w")) == NULL)
	{
		printf("Failed to open the file！");
		exit(0);
	}

	for (i = 0; i < num_person; i++) {
		fprintf(fp, "%d %s %s %s %s %d %d %d %d %d %d %s\n",
			person[i].id, person[i].name, person[i].gender, person[i].block, person[i].room_type, person[i].price, person[i].meal, person[i].laundry, person[i].week, person[i].due, person[i].payment, person[i].paytype);
	}
	fclose(fp);
}

//显示房间信息
void view_room() {
	int i = 0;
	printf("Block\tGender\tRoom_type\tPrice\tMeal\tLaundry\tNum\n");
	for (i = 0; i < 4; i++)
	{
		printf("%s\t%s\t%s\t%d\t%d\t%d\t%d",
			room[i].block, room[i].gender, room[i].room_type, room[i].price, room[i].meal, room[i].laundry, room[i].num);
		if (room[i].num > 0)
			printf("\tAvailable\n");
		else
			printf("\tNot available\n");
	}
}

//显示客房信息
void view_person() {
	int i;
	printf("ID\tName\tGender\tBlock\tRoom_type\tPrice\tMeal\tLaundry\tweek\tDue\tPayment\tPay_way\n");
	for (i = 0; i < num_person; i++) {
		printf("%d\t%s\t%s\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\t%s\n",
			person[i].id, person[i].name, person[i].gender, person[i].block, person[i].room_type, person[i].price, person[i].meal, person[i].laundry, person[i].week, person[i].due, person[i].payment, person[i].paytype);
	}
}

//检查房间可用性
void check_room() {
	int n;
	printf("\n1. Print all room information\n");
	printf("\n2. Check acconding to Gender\n");
	printf("\n3. Check acconding to Room type\n");
	printf("\nPlease select a serial number:");
	scanf("%d", &n);
	if (n == 1) {
		view_room();
	}
	else if (n == 2) {
		int gender;
		printf("\n1. Male\t2. Female\n");
		printf("\nPlease confirm gender:");
		scanf("%d", &gender);
		if (gender == 1) {
			printf("Block\tGender\tRoom_type\tPrice\tMeal\tLaundry\tNum\n");
			int i;
			for (i = 0; i < 4; i++)
			{
				if (!strcmp(room[i].gender, "Male")) {
					printf("%s\t%s\t%s\t%d\t%d\t%d\t%d",
						room[i].block, room[i].gender, room[i].room_type, room[i].price, room[i].meal, room[i].laundry, room[i].num);
					if (room[i].num > 0)
						printf("\tAvailable\n");
					else
						printf("\tNot available\n");
				}
			}
		}
		else if (gender == 2) {
			printf("Block\tGender\tRoom_type\tPrice\tMeal\tLaundry\tNum\n");
			int i;
			for (i = 0; i < 4; i++)
			{
				if (!strcmp(room[i].gender, "Female")) {
					printf("%s\t%s\t%s\t%d\t%d\t%d\t%d",
						room[i].block, room[i].gender, room[i].room_type, room[i].price, room[i].meal, room[i].laundry, room[i].num);
					if (room[i].num > 0)
						printf("\tAvailable\n");
					else
						printf("\tNot available\n");
				}
			}
		}
		else {
			printf("\nIncorrect entry number！\n");
		}
	}
	else if (n == 3) {
		int type;
		printf("\n1. A1\t2. A4\t3. B1\t4. B3\n");
		printf("\nPlease confirm the Room type:");
		scanf("%d", &type);
		if (type == 1) {
			printf("Block\tGender\tRoom_type\tPrice\tMeal\tLaundry\tNum\n");
			printf("%s\t%s\t%s\t%d\t%d\t%d\t%d",
				room[0].block, room[0].gender, room[0].room_type, room[0].price, room[0].meal, room[0].laundry, room[0].num);
			if (room[0].num > 0)
				printf("\tAvailable\n");
			else
				printf("\tNot available\n");
		}
		else if (type == 2) {
			printf("Block\tGender\tRoom_type\tPrice\tMeal\tLaundry\tNum\n");
			printf("%s\t%s\t%s\t%d\t%d\t%d\t%d",
				room[1].block, room[1].gender, room[1].room_type, room[1].price, room[1].meal, room[1].laundry, room[1].num);
			if (room[1].num > 0)
				printf("\tAvailable\n");
			else
				printf("\tNot available\n");
		}
		else if (type == 3) {
			printf("Block\tGender\tRoom_type\tPrice\tMeal\tLaundry\tNum\n");
			printf("%s\t%s\t%s\t%d\t%d\t%d\t%d",
				room[2].block, room[2].gender, room[2].room_type, room[2].price, room[2].meal, room[2].laundry, room[2].num);
			if (room[2].num > 0)
				printf("\tAvailable\n");
			else
				printf("\tNot available\n");
		}
		else if (type == 4) {
			printf("Block\tGender\tRoom_type\tPrice\tMeal\tLaundry\tNum\n");
			printf("%s\t%s\t%s\t%d\t%d\t%d\t%d",
				room[3].block, room[3].gender, room[3].room_type, room[3].price, room[3].meal, room[3].laundry, room[3].num);
			if (room[3].num > 0)
				printf("\tAvailable\n");
			else
				printf("\tNot available\n");
		}
		else {
			printf("\nIncorrect entry number！\n");
		}
	}
	else {
		printf("\nIncorrect entry number！\n");
	}
}

//预订房间
void book_room() {
	int n;
	char block[10];
	bool flag = true;
	printf("\n1. Booking according to the ID\n");
	printf("\n2. Booking according to the Room type\n");
	printf("\nPlease enter the serial number :");
	scanf("%d", &n);

	if (n == 1) {
		int gender;
		printf("\n1. Male\t2. Female\n");
		printf("\nPlease confirm Gender:");
		scanf("%d", &gender);
		if (gender == 1) {
			printf("Block\tGender\tRoom_type\tPrice\tMeal\tLaundry\tNum\n");
			printf("%s\t%s\t%s\t%d\t%d\t%d\t%d\n",
				room[0].block, room[0].gender, room[0].room_type, room[0].price, room[0].meal, room[0].laundry, room[0].num);
			printf("%s\t%s\t%s\t%d\t%d\t%d\t%d\n",
				room[1].block, room[1].gender, room[1].room_type, room[1].price, room[1].meal, room[1].laundry, room[1].num);
			printf("Please select your room Block number：");
			scanf("%s", block);
			if (strcmp(block, "A1") && strcmp(block, "A4")) {
				flag = false;
			}
			if (!strcmp(block, "A1") && !room[0].num) {
				flag = false;
			}
			if (!strcmp(block, "A4") && !room[1].num) {
				flag = false;
			}
		}
		else if (gender == 2) {
			printf("Block\tGender\tRoom_type\tPrice\tMeal\tLaundry\tNum\n");
			printf("%s\t%s\t%s\t%d\t%d\t%d\t%d\n",
				room[2].block, room[2].gender, room[2].room_type, room[2].price, room[2].meal, room[2].laundry, room[2].num);
			printf("%s\t%s\t%s\t%d\t%d\t%d\t%d\n",
				room[3].block, room[3].gender, room[3].room_type, room[3].price, room[3].meal, room[3].laundry, room[3].num);
			printf("Please select your room Block number：");
			scanf("%s", block);
			if (strcmp(block, "B1") && strcmp(block, "B3")) {
				flag = false;
			}
			if (!strcmp(block, "B1") && !room[2].num) {
				flag = false;
			}
			if (!strcmp(block, "B3") && !room[3].num) {
				flag = false;
			}
		}
		else {
			printf("\nIncorrect entry number！\n");
			flag = false;
		}
	}
	else if (n == 2) {
		int type;
		printf("\n1. Single_Bed\t2. 3_Bedded\t3.4_Bedded\n");
		printf("\nPlease confirm the Room type:");
		scanf("%d", &type);
		if (type == 1) {
			printf("Block\tGender\tRoom_type\tPrice\tMeal\tLaundry\tNum\n");
			printf("%s\t%s\t%s\t%d\t%d\t%d\t%d\n",
				room[0].block, room[0].gender, room[0].room_type, room[0].price, room[0].meal, room[0].laundry, room[0].num);
			printf("%s\t%s\t%s\t%d\t%d\t%d\t%d\n",
				room[2].block, room[2].gender, room[2].room_type, room[2].price, room[2].meal, room[2].laundry, room[2].num);
			printf("Please select your room Block number：");
			scanf("%s", block);
			if (strcmp(block, "A1") && strcmp(block, "B1")) {
				flag = false;
			}
			if (!strcmp(block, "A1") && !room[0].num) {
				flag = false;
			}
			if (!strcmp(block, "B1") && !room[2].num) {
				flag = false;
			}
		}
		else if (type == 2) {
			printf("Block\tGender\tRoom_type\tPrice\tMeal\tLaundry\tNum\n");
			printf("%s\t%s\t%s\t%d\t%d\t%d\t%d\n",
				room[3].block, room[3].gender, room[3].room_type, room[3].price, room[3].meal, room[3].laundry, room[3].num);
			printf("Please select your room Block number：");
			scanf("%s", block);
			if (strcmp(block, "B3")) {
				flag = false;
			}
			if (!strcmp(block, "B3") && !room[3].num) {
				flag = false;
			}
		}
		else if (type == 3) {
			printf("Block\tGender\tRoom_type\tPrice\tMeal\tLaundry\tNum\n");
			printf("%s\t%s\t%s\t%d\t%d\t%d\t%d\n",
				room[1].block, room[1].gender, room[1].room_type, room[1].price, room[1].meal, room[1].laundry, room[1].num);
			printf("Please select your room Block number：");
			scanf("%s", block);
			if (strcmp(block, "A4")) {
				flag = false;
			}
			if (!strcmp(block, "A4") && !room[1].num) {
				flag = false;
			}
		}
		else {
			printf("\nIncorrect entry number！\n");
			flag = false;
		}
	}
	else {
		printf("\nIncorrect entry number！\n");
		flag = false;
	}
	if (flag) {
		strcpy(person[num_person].block, block);
		if (!strcmp(block, "A1")) {
			person[num_person].price = 400;
			strcpy(person[num_person].room_type, "Single_Bed");
			strcpy(person[num_person].gender, "Male");
		}
		if (!strcmp(block, "A4")) {
			person[num_person].price = 100;
			strcpy(person[num_person].room_type, "4_Bedded");
			strcpy(person[num_person].gender, "Male");
		}
		if (!strcmp(block, "B1")) {
			person[num_person].price = 400;
			strcpy(person[num_person].room_type, "Single_Bed");
			strcpy(person[num_person].gender, "Female");
		}
		if (!strcmp(block, "B3")) {
			person[num_person].price = 150;
			strcpy(person[num_person].room_type, "3_Bedded");
			strcpy(person[num_person].gender, "Female");
		}
		int flag_meal = MAX;
		int flag_laundry = MAX;
		while (flag_meal > 1 || flag_laundry > 1) {
			printf("Whether Meal should be provided（1.YES  0.NO）");
			scanf("%d", &flag_meal);
			if (flag_meal > 1) {
				printf("Enter error, please re-enter！");
				continue;
			}
			printf("Whether Laundry should be provided（1.YES  0.NO）");
			scanf("%d", &flag_laundry);
			if (flag_laundry > 1) {
				printf("Enter error, please re-enter！");
				continue;
			}
		}
		if (flag_meal)
			person[num_person].meal = 120;
		else
			person[num_person].meal = 0;
		if (flag_laundry)
			person[num_person].laundry = 20;
		else
			person[num_person].laundry = 0;
		printf("Please enter reservation weeks：");
		scanf("%d", &person[num_person].week);
		printf("Please enter the ID：");
		scanf("%d", &person[num_person].id);
		while (1) {
			bool flag_id = true;
			int i;
			for (i = 0; i < num_person; i++) {
				if (person[i].id == person[num_person].id) {
					flag_id = false;
					printf("This ID already exists. Please re-enter the ID：");
					scanf("%d", &person[num_person].id);
					break;
				}
			}
			if (flag_id)
				break;
		}
		printf("Please enter the Name：");
		scanf("%s", person[num_person].name);
		printf("%s area Gender：%s\n", person[num_person].block, person[num_person].gender);
		person[num_person].due = (person[num_person].price + person[num_person].meal + person[num_person].laundry) * person[num_person].week;
		printf("Total amount receivable：%d\n", person[num_person].due);
		printf("Please enter payment：");
		scanf("%d", &person[num_person].payment);
		printf("Please enter payment method：");
		scanf("%s", person[num_person].paytype);
		printf("Reservation success！\n");
		int i;
		for (i = 0; i < 4; i++) {
			if (!strcmp(block, room[i].block))
				room[i].num--;
		}
		amount += person[num_person].due;
		payment += person[num_person].payment;
		num_person++;
	}
	else {
		printf("Incorrect input or full room！\n");
	}
}

//按周计算账单
void amountByWeek() {
	int i;
	int amount_ = 0;
	int payment_ = 0;
	int week;
	printf("Please enter the number of weeks reserved：");
	scanf("%d", &week);
	for (i = 0; i < num_person; i++) {
		if (week == person[i].week) {
			amount_ += person[i].due;
			payment_ += person[i].payment;
		}
	}
	printf("Total amount receivable for booking %d weeks：%d\n", week, amount_);
	printf("Total payment received for booking %d weeks：%d\n", week, payment_);
}

//查询房间信息
void search_room() {
	printf("1.Print all hosteler's room detail\n");
	printf("2.According to the ID\n");
	printf("3.According to the Name\n");
	printf("Please enter the serial number of the query method：");
	int n;
	scanf("%d", &n);
	if (n == 1) {
		if (!num_person) {
			printf("No housing information available！\n");
		}
		else {
			view_person();
		}
	}
	else if (n == 2) {
		printf("Please enter the query ID：");
		int id, i;
		bool flag = false;
		scanf("%d,", &id);
		printf("ID\tName\tGender\tBlock\tRoom_type\tPrice\tMeal\tLaundry\tweek\tDue\tPayment\tPay_way\n");
		for (i = 0; i < num_person; i++) {
			if (id == person[i].id) {
				flag = true;
				printf("%d\t%s\t%s\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\t%s\n",
					person[i].id, person[i].name, person[i].gender, person[i].block, person[i].room_type, person[i].price, person[i].meal, person[i].laundry, person[i].week, person[i].due, person[i].payment, person[i].paytype);
			}
		}
		if (!flag) {
			printf("This ID was not queried！\n");
		}
	}
	else if (n == 3) {
		printf("Please enter the query Name：");
		int i;
		char name[20];
		bool flag = false;
		scanf("%s,", name);
		printf("ID\tName\tGender\tBlock\tRoom_type\tPrice\tMeal\tLaundry\tweek\tDue\tPayment\tPay_way\n");
		for (i = 0; i < num_person; i++) {
			if (!strcmp(name, person[i].name)) {
				flag = true;
				printf("%d\t%s\t%s\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\t%s\n",
					person[i].id, person[i].name, person[i].gender, person[i].block, person[i].room_type, person[i].price, person[i].meal, person[i].laundry, person[i].week, person[i].due, person[i].payment, person[i].paytype);
			}
		}
		if (!flag) {
			printf("This Name was not queried！\n");
		}
	}
	else {
		printf("\nIncorrect entry number！\n");
	}
}

//取消预订
void cancel_room() {
	printf("Please enter the ID：");
	int id, i, j;
	bool flag = false;
	scanf("%d", &id);
	for (i = 0; i < num_person; i++) {
		if (id == person[i].id) {
			flag = true;
			printf("ID\tName\tGender\tBlock\tRoom_type\tPrice\tMeal\tLaundry\tweek\tDue\tPayment\tPay_way\n");
			printf("%d\t%s\t%s\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\t%s\n",
				person[i].id, person[i].name, person[i].gender, person[i].block, person[i].room_type, person[i].price, person[i].meal, person[i].laundry, person[i].week, person[i].due, person[i].payment, person[i].paytype);
			printf("Please enter number of weeks occupied：");
			int week;
			scanf("%d", &week);
			int money;
			money = (person[i].price + person[i].meal + person[i].laundry) * (person[i].week - week) - (person[i].due - person[i].payment);
			if (money >= 0) {
				printf("Already pay：%d\tRefund：%d\n", person[i].payment, money);
			}
			else {
				printf("Already pay：%d\tDue：%d\n", person[i].payment, -money);
			}
			printf("\nCancellation successful！\n");
			amount -= (person[i].price + person[i].meal + person[i].laundry) * (person[i].week - week);
			payment -= money;
			num_person--;
			for (j = 0; j < 4; j++) {
				if (!strcmp(room[j].block, person[i].block)) {
					room[i].num++;
					break;
				}
			}
			for (j = i; j < num_person; j++) {
				person[j] = person[j + 1];
			}
			break;
		}
	}
	if (!flag) {
		printf("This ID was not queried！\n");
	}
}

//更改房间类型
void change_room() {
	printf("Please enter the ID：");
	int id, i;
	bool flag = false;
	scanf("%d", &id);
	for (i = 0; i < num_person; i++) {
		if (id == person[i].id) {
			flag = true;
			printf("ID\tName\tGender\tBlock\tRoom_type\tPrice\tMeal\tLaundry\tweek\tDue\tPayment\tPay_way\n");
			printf("%d\t%s\t%s\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\t%s\n",
				person[i].id, person[i].name, person[i].gender, person[i].block, person[i].room_type, person[i].price, person[i].meal, person[i].laundry, person[i].week, person[i].due, person[i].payment, person[i].paytype);
			if (!strcmp(person[i].gender, "Male")) {
				if (!strcmp(person[i].room_type, "Single_Bed")) {
					printf("The room types in the Male area are Single_Bed and 4_Bedded\n");
					printf("Make sure to change the room type to 4_Bedded（1.YES  0.NO）：");
					int a;
					scanf("%d", &a);
					while (a != 1 && a != 0) {
						printf("Enter error, please re-enter！（1.YES  0.NO）：");
						scanf("%d", &a);
					}
					if (a == 1) {
						int week;
						printf("Please enter number of weeks occupied：");
						scanf("%d", &week);
						int money = (400 - 100) * (person[i].week - week) - (person[i].due - person[i].payment);
						if (money >= 0) {
							printf("Already pay：%d\tRefund：%d\n", person[i].payment, money);
						}
						else {
							printf("Already pay：%d\tDue：%d\n", person[i].payment, -money);
						}
						printf("\nThe room type was changed successfully！\n");
						strcpy(person[i].block, "A4");
						strcpy(person[i].room_type, "4_Bedded");
						person[i].price = 100;
						person[i].due -= (400 - 100) * (person[i].week - week);
						person[i].payment -= (400 - 100) * (person[i].week - week);
						amount -= (400 - 100) * (person[i].week - week);
						payment -= (400 - 100) * (person[i].week - week);
						break;
					}
					else if (a == 0) {
						printf("Change of room type cancelled！\n");
						break;
					}
				}
				else if (!strcmp(person[i].room_type, "4_Bedded")) {
					printf("The room types in the Male area are Single_Bed and 4_Bedded\n");
					printf("Make sure to change the room type to Single_Bed（1.YES  0.NO）：");
					int a;
					scanf("%d", &a);
					while (a != 1 && a != 0) {
						printf("Enter error, please re-enter！（1.YES  0.NO）：");
						scanf("%d", &a);
					}
					if (a == 1) {
						int week;
						printf("Please enter number of weeks occupied：");
						scanf("%d", &week);
						int money = (400 - 100) * (person[i].week - week) + (person[i].due - person[i].payment);
						if (money < 0) {
							printf("Already pay：%d\tRefund：%d\n", person[i].payment, -money);
						}
						else {
							printf("Already pay：%d\tDue：%d\n", person[i].payment, money);
						}
						printf("\nThe room type was changed successfully！\n");
						strcpy(person[i].block, "A1");
						strcpy(person[i].room_type, "Single_Bed");
						person[i].price = 400;
						person[i].due += (400 - 100) * (person[i].week - week);
						person[i].payment += (400 - 100) * (person[i].week - week);
						amount += (400 - 100) * (person[i].week - week);
						payment += (400 - 100) * (person[i].week - week);
						break;
					}
					else if (a == 0) {
						printf("Change of room type cancelled！\n");
						break;
					}
				}
			}
			else if (!strcmp(person[i].gender, "Female")) {
				if (!strcmp(person[i].room_type, "Single_Bed")) {
					printf("The room types in the Female area are only Single_Bed and 3_Bedded\n");
					printf("Make sure to change the room type to 3_Bedded（1.YES  0.NO）：");
					int a;
					scanf("%d", &a);
					while (a != 1 && a != 0) {
						printf("Enter error, please re-enter！（1.YES  0.NO）：");
						scanf("%d", &a);
					}
					if (a == 1) {
						int week;
						printf("Please enter number of weeks occupied：");
						scanf("%d", &week);
						int money = (400 - 150) * (person[i].week - week) - (person[i].due - person[i].payment);
						if (money >= 0) {
							printf("Already pay：%d\tRefund：%d\n", person[i].payment, money);
						}
						else {
							printf("Already pay：%d\tDue：%d\n", person[i].payment, -money);
						}
						printf("\nThe room type was changed successfully！\n");
						strcpy(person[i].block, "B3");
						strcpy(person[i].room_type, "3_Bedded");
						person[i].price = 150;
						person[i].due -= (400 - 150) * (person[i].week - week);
						person[i].payment -= (400 - 150) * (person[i].week - week);
						amount -= (400 - 150) * (person[i].week - week);
						payment -= (400 - 150) * (person[i].week - week);
						break;
					}
					else if (a == 0) {
						printf("Change of room type cancelled！\n");
						break;
					}
				}
				else if (!strcmp(person[i].room_type, "3_Bedded")) {
					printf("The room types in the Female area are only Single_Bed and 3_Bedded\n");
					printf("Make sure to change the room type to Single_Bed（1.YES  0.NO）：");
					int a;
					scanf("%d", &a);
					while (a != 1 && a != 0) {
						printf("Enter error, please re-enter！（1.YES  0.NO）：");
						scanf("%d", &a);
					}
					if (a == 1) {
						int week;
						printf("Please enter number of weeks occupied：");
						scanf("%d", &week);
						int money = (400 - 150) * (person[i].week - week) + (person[i].due - person[i].payment);
						if (money < 0) {
							printf("Already pay：%d\tRefund：%d\n", person[i].payment, -money);
						}
						else {
							printf("Already pay：%d\tDue：%d\n", person[i].payment, money);
						}
						printf("\nThe room type was changed successfully！\n");
						strcpy(person[i].block, "B1");
						strcpy(person[i].room_type, "Single_Bed");
						person[i].price = 400;
						person[i].due += (400 - 150) * (person[i].week - week);
						person[i].payment += (400 - 150) * (person[i].week - week);
						amount += (400 - 150) * (person[i].week - week);
						payment += (400 - 150) * (person[i].week - week);
						break;
					}
					else if (a == 0) {
						printf("Change of room type cancelled！\n");
						break;
					}
				}
			}
		}
	}
	if (!flag) {
		printf("This ID was not queried！\n");
	}
}

//按街区或房间类型打印每个酒店的应收账款
void view_amount() {
	printf("1.Print amount receivable and payment received by block\n");
	printf("2.Print amount receivable and payment received by room type\n");
	int n;
	scanf("%d", &n);
	if (n == 1) {
		int i, amount_, payment_;
		printf("\nA1 Block：\n");
		amount_ = 0;
		payment_ = 0;
		for (i = 0; i < num_person; i++) {
			if (!strcmp(person[i].block, "A1")) {
				amount_ += person[i].due;
				payment_ += person[i].payment;
			}
		}
		printf("Amount receivable：%d\n", amount_);
		printf("Payment received：%d\n", payment_);

		printf("\nA4 Block：\n");
		amount_ = 0;
		payment_ = 0;
		for (i = 0; i < num_person; i++) {
			if (!strcmp(person[i].block, "A4")) {
				amount_ += person[i].due;
				payment_ += person[i].payment;
			}
		}
		printf("Amount receivable：%d\n", amount_);
		printf("Payment received：%d\n", payment_);

		printf("\nB1 Block：\n");
		amount_ = 0;
		payment_ = 0;
		for (i = 0; i < num_person; i++) {
			if (!strcmp(person[i].block, "B1")) {
				amount_ += person[i].due;
				payment_ += person[i].payment;
			}
		}
		printf("Amount receivable：%d\n", amount_);
		printf("Payment received：%d\n", payment_);

		printf("\nB3 Block：\n");
		amount_ = 0;
		payment_ = 0;
		for (i = 0; i < num_person; i++) {
			if (!strcmp(person[i].block, "B3")) {
				amount_ += person[i].due;
				payment_ += person[i].payment;
			}
		}
		printf("Amount receivable：%d\n", amount_);
		printf("Payment received：%d\n", payment_);
	}
	else if (n == 2) {
		int i, amount_, payment_;
		printf("\nSingle_Bed Room type：\n");
		amount_ = 0;
		payment_ = 0;
		for (i = 0; i < num_person; i++) {
			if (!strcmp(person[i].room_type, "Single_Bed")) {
				amount_ += person[i].due;
				payment_ += person[i].payment;
			}
		}
		printf("Amount receivable：%d\n", amount_);
		printf("Payment received：%d\n", payment_);

		printf("\n3_Bedded Room type：\n");
		amount_ = 0;
		payment_ = 0;
		for (i = 0; i < num_person; i++) {
			if (!strcmp(person[i].room_type, "3_Bedded")) {
				amount_ += person[i].due;
				payment_ += person[i].payment;
			}
		}
		printf("Amount receivable：%d\n", amount_);
		printf("Payment received：%d\n", payment_);

		printf("\n4_Bedded Room type：\n");
		amount_ = 0;
		payment_ = 0;
		for (i = 0; i < num_person; i++) {
			if (!strcmp(person[i].room_type, "4_Bedded")) {
				amount_ += person[i].due;
				payment_ += person[i].payment;
			}
		}
		printf("Amount receivable：%d\n", amount_);
		printf("Payment received：%d\n", payment_);
	}
	else {
		printf("\nIncorrect entry number！\n");
	}
}

//打印总额
void view_total() {
	printf("Total amount receivable：%d\n", amount);
	printf("Total payment received：%d\n", payment);
}

//主界面
void meu()
{
	printf("\n*******************WISDOM COLLEGE HOSTEL MANAGEMENT SYSTEM *********************\n");
	printf("\n********************************************************************************\n");
	printf("\n**             1 Check room availability                                      **\n");
	printf("\n**             2 Booking as per gender and room type                          **\n");
	printf("\n**             3 Bill based on number of weeks of booked by hosteler          **\n");
	printf("\n**             4 Search hosteler’s room detail                               **\n");
	printf("\n**             5 Early (or mid-way) cancellation                              **\n");
	printf("\n**             6 Change room type                                             **\n");
	printf("\n**             7 Print amount receivable from each hosteler                   **\n");
	printf("\n**             8 Print total amount receivable and total payment received     **\n");
	printf("\n**             0 Quit                                                         **\n");
	printf("\n********************************************************************************\n");
}

int main()
{
	import_room();
	int t;
	while (1)
	{
		system("CLS");
		meu();
		printf("\nPlease select a serial number:");
		scanf("%d", &t);

		switch (t)
		{
		case 0:
			printf("\nExiting system!\n");
			exit(0);
		case 1:
			system("CLS");
			check_room();
			save_room();
			getchar();
			printf("\nPress enter to the main screen!\n");
			getchar();
			break;
		case 2:
			system("CLS");
			book_room();
			save_room();
			printf("\nPress enter to the main screen!\n");
			getchar();
			getchar();
			break;
		case 3:
			system("CLS");
			amountByWeek();
			save_room();
			printf("\nPress enter to the main screen!\n");
			getchar();
			getchar();
			break;
		case 4:
			system("CLS");
			search_room();
			save_room();
			printf("\nPress enter to the main screen!\n");
			getchar();
			getchar();
			break;
		case 5:
			system("CLS");
			cancel_room();
			save_room();
			printf("\nPress enter to the main screen!\n");
			getchar();
			getchar();
			break;
		case 6:
			system("CLS");
			change_room();
			save_room();
			printf("\nPress enter to the main screen!\n");
			getchar();
			getchar();
			break;
		case 7:
			system("CLS");
			view_amount();
			save_room();
			printf("\nPress enter to the main screen!\n");
			getchar();
			getchar();
			break;
		case 8:
			system("CLS");
			view_total();
			save_room();
			printf("\nPress enter to the main screen!\n");
			getchar();
			getchar();
			break;
		default:
			printf("\nEnter error, please re-enter!\n");
		}
	}
	return 0;
}
